{"remainingRequest":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\src\\views\\todolist\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\src\\views\\todolist\\index.vue","mtime":1645498622000},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674635617236},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1674635619784},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674635617236},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1674635619517}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEl0ZW0sIHNldEl0ZW0gfSBmcm9tICJAL3V0aWxzL3N0b3JhZ2UiOwppbXBvcnQgeyBuYW5vaWQgfSBmcm9tICJuYW5vaWQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInRvZG9saXN0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hlY2tMaXN0OiBbXSwKICAgICAgYWxsTGlzdDogW10sCiAgICAgIHNob3c6IGZhbHNlLAogICAgICB0aXRsZTogIiIsCiAgICAgIGRlc2M6ICIiLAogICAgICB0aW1lOiAwLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb21wbGV0ZUxpc3QoKSB7CiAgICAgIGxldCBsaXN0ID0gW107CiAgICAgIHRoaXMuYWxsTGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0uaXNDb21wbGV0ZSkgewogICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBsaXN0OwogICAgfSwKICAgIHRvZG9MaXN0KCkgewogICAgICBsZXQgbGlzdCA9IFtdOwogICAgICB0aGlzLmFsbExpc3QuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIGlmICghaXRlbS5pc0NvbXBsZXRlKSB7CiAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIGxpc3Q7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgYmVmb3JlQ2xvc2UoeyBuYW1lLCBwb3NpdGlvbiwgaW5zdGFuY2UgfSxpZCkgewogICAgICBzd2l0Y2ggKHBvc2l0aW9uKSB7CiAgICAgICAgY2FzZSAibGVmdCI6aWQKICAgICAgICBjYXNlICJjZWxsIjoKICAgICAgICBjYXNlICJvdXRzaWRlIjoKICAgICAgICAgIGluc3RhbmNlLmNsb3NlKCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJyaWdodCI6CiAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmFsbExpc3QuZmluZEluZGV4KChpdGVtKSA9PiBpdGVtLmlkID09PSBpZCk7CiAgICAgICAgICB0aGlzLmFsbExpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgIHNldEl0ZW0oIm15TGlzdCIsIHRoaXMuYWxsTGlzdCk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfSwKICAgIGRlbGV0ZShpZCkgewogICAgICBsZXQgaW5kZXggPSB0aGlzLmFsbExpc3QuZmluZEluZGV4KChpdGVtKSA9PiBpdGVtLmlkID09PSBpZCk7CiAgICAgIHRoaXMuYWxsTGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICBzZXRJdGVtKCJteUxpc3QiLCB0aGlzLmFsbExpc3QpOwogICAgfSwKICAgIGFkZE5ldygpIHsKICAgICAgbGV0IGl0ZW0gPSB7fTsKICAgICAgaXRlbS5pZCA9IG5hbm9pZCgpOwogICAgICBpdGVtLnRpdGxlID0gdGhpcy50aXRsZTsKICAgICAgaXRlbS5kZXNjID0gdGhpcy5kZXNjOwogICAgICBpdGVtLnRpbWUgPSB0aGlzLnRpbWU7CiAgICAgIGl0ZW0uaXNDb21wbGV0ZSA9IGZhbHNlOwogICAgICBpdGVtLmNyZWF0ZVRpbWUgPSBuZXcgRGF0ZSgpOwogICAgICB0aGlzLmFsbExpc3QucHVzaChpdGVtKTsKICAgICAgc2V0SXRlbSgibXlMaXN0IiwgdGhpcy5hbGxMaXN0KTsKICAgICAgdGhpcy5zaG93ID0gZmFsc2U7CiAgICB9LAogICAgQWxsY2hlY2soKSB7CiAgICAgIHRoaXMuYWxsTGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaXRlbS5pc0NvbXBsZXRlID0gdHJ1ZTsKICAgICAgfSk7CiAgICAgIHNldEl0ZW0oIm15TGlzdCIsIHRoaXMuYWxsTGlzdCk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGxldCBsaXN0ID0gZ2V0SXRlbSgibXlMaXN0Iik7CiAgICBjb25zb2xlLmxvZyhsaXN0KTsKICAgIHRoaXMuYWxsTGlzdCA9IGxpc3Q7CiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/todolist","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"todolist\">\n      <div class=\"title-wrap\">\n        <div class=\"title\">学习计划</div>\n        <div class=\"des\">现在开始 制定你的学习计划</div>\n      </div>\n      <!-- 未完成tag -->\n      <div class=\"tag-wrapper\">\n        <div class=\"box-tag\">\n          <van-icon name=\"clock-o\" />\n          未完成\n        </div>\n        <div class=\"remaing\">\n          ({{ allList.length - todoList.length }}/{{ allList.length }})\n        </div>\n      </div>\n      <div class=\"main-list\">\n        <van-empty\n          v-if=\"todoList.length === 0\"\n          image=\"error\"\n          description=\"请添加学习计划\"\n        />\n        <van-swipe-cell\n            :before-close=\"beforeClose(item.id)\"\n          class=\"swipe-cell\"\n          v-for=\"item in todoList\"\n          :key=\"item.id\"\n        >\n          <van-cell :border=\"false\">\n            <van-checkbox\n              slot=\"icon\"\n              v-model=\"item.isComplete\"\n              @change=\"item.isComplete = !item.isComplete\"\n            >\n            </van-checkbox>\n            <div slot=\"title\" class=\"content-title\">\n              {{ item.title }}\n            </div>\n            <div slot=\"label\" class=\"content-labe\">\n              {{ item.desc }}\n            </div>\n            <div class=\"time-need\">\n              <div class=\"need-time\">所需:{{ item.time }}h</div>\n              <div class=\"at-time\">{{ item.createTime | dateTime }}</div>\n            </div>\n          </van-cell>\n          <template #right>\n            <van-button\n              class=\"button\"\n              square\n              type=\"danger\"\n              text=\"删除\"\n            />\n            <van-button class=\"button\" square type=\"primary\" text=\"收藏\" />\n          </template>\n        </van-swipe-cell>\n\n        <!-- 统计 -->\n        <div class=\"total-uncomplete\">\n          <van-checkbox>全部完成</van-checkbox>\n          <div class=\"totaltime\">总计:120h</div>\n        </div>\n      </div>\n      <!-- 已完成tag -->\n      <div class=\"complete-tag-wrapper\">\n        <div class=\"complete-box-tag\">\n          <van-icon name=\"success\" />\n          已完成\n        </div>\n      </div>\n      <div class=\"main-list complete\">\n        <van-empty\n          v-if=\"completeList.length === 0\"\n          image=\"error\"\n          description=\"您还没有完成任何事项\"\n        />\n        <van-swipe-cell\n            :before-close=\"beforeClose(item.id)\"\n          class=\"swipe-cell\"\n          v-for=\"item in completeList\"\n          :key=\"item.id\"\n        >\n          <van-cell :border=\"false\">\n            <van-checkbox\n              slot=\"icon\"\n              v-model=\"item.isComplete\"\n              @change=\"item.isComplete = !item.isComplete\"\n            >\n            </van-checkbox>\n            <div slot=\"title\" class=\"content-title\">\n              {{ item.title }}\n            </div>\n            <div slot=\"label\" class=\"content-labe\">\n              {{ item.desc }}\n            </div>\n            <div class=\"time-need\">\n              <div class=\"need-time\">所需:40h</div>\n              <div class=\"at-time\">{{ item.createTime | dateTime }}</div>\n            </div>\n          </van-cell>\n          <template #right>\n            <van-button\n              class=\"button\"\n              square\n              type=\"danger\"\n              @click=\"delete item.id\"\n              text=\"删除\"\n            />\n            <van-button class=\"button\" square type=\"primary\" text=\"收藏\" />\n          </template>\n        </van-swipe-cell>\n        <!-- 统计 -->\n        <div class=\"total-uncomplete\">\n          <div class=\"tip\">天道酬勤</div>\n          <div class=\"totaltime\">您总共学习了:120h</div>\n        </div>\n      </div>\n      <!-- 新建学习计划 -->\n      <van-button\n        round\n        class=\"addNew\"\n        @click=\"show = true\"\n        plain\n        icon=\"add\"\n        type=\"info\"\n      >\n        新建\n      </van-button>\n      <van-popup v-model=\"show\" :style=\"{ width: '90%' }\">\n        <van-cell-group inset>\n          <h2 class=\"learn-plan-title\">添加学习计划</h2>\n          <van-field\n            v-model=\"title\"\n            label=\"标题\"\n            placeholder=\"请输入事件标题\"\n          />\n          <van-field v-model=\"desc\" label=\"描述\" placeholder=\"请输入用户名\" />\n          <van-field\n            v-model=\"time\"\n            label=\"所需时间\"\n            placeholder=\"请输入需要使用的时间\"\n          />\n        </van-cell-group>\n        <div class=\"button-class\">\n          <van-button type=\"default\" @click=\"show = false\">取消</van-button>\n          <van-button type=\"primary\" @click=\"addNew\">添加</van-button>\n        </div>\n      </van-popup>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getItem, setItem } from \"@/utils/storage\";\nimport { nanoid } from \"nanoid\";\nexport default {\n  name: \"todolist\",\n  data() {\n    return {\n      checkList: [],\n      allList: [],\n      show: false,\n      title: \"\",\n      desc: \"\",\n      time: 0,\n    };\n  },\n  computed: {\n    completeList() {\n      let list = [];\n      this.allList.forEach((item) => {\n        if (item.isComplete) {\n          list.push(item);\n        }\n      });\n      return list;\n    },\n    todoList() {\n      let list = [];\n      this.allList.forEach((item) => {\n        if (!item.isComplete) {\n          list.push(item);\n        }\n      });\n      return list;\n    },\n  },\n  methods: {\n    beforeClose({ name, position, instance },id) {\n      switch (position) {\n        case \"left\":id\n        case \"cell\":\n        case \"outside\":\n          instance.close();\n          break;\n        case \"right\":\n          let index = this.allList.findIndex((item) => item.id === id);\n          this.allList.splice(index, 1);\n          setItem(\"myList\", this.allList);\n          break;\n      }\n    },\n    delete(id) {\n      let index = this.allList.findIndex((item) => item.id === id);\n      this.allList.splice(index, 1);\n      setItem(\"myList\", this.allList);\n    },\n    addNew() {\n      let item = {};\n      item.id = nanoid();\n      item.title = this.title;\n      item.desc = this.desc;\n      item.time = this.time;\n      item.isComplete = false;\n      item.createTime = new Date();\n      this.allList.push(item);\n      setItem(\"myList\", this.allList);\n      this.show = false;\n    },\n    Allcheck() {\n      this.allList.forEach((item) => {\n        item.isComplete = true;\n      });\n      setItem(\"myList\", this.allList);\n    },\n  },\n  created() {\n    let list = getItem(\"myList\");\n    console.log(list);\n    this.allList = list;\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  margin: 0;\n  position: fixed;\n  overflow-y: auto;\n  top: 0;\n  bottom: 46px;\n  left: 0;\n  right: 0;\n\n  .todolist {\n    padding: 15px;\n    .title-wrap {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-end;\n      .title {\n        font-size: 26px;\n      }\n      .des {\n        color: rgb(148, 148, 148);\n        font-size: 10px;\n      }\n    }\n    .tag-wrapper {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-top: 10px;\n      .box-tag {\n        border-radius: 20px;\n        width: 25%;\n        font-size: 14px;\n        color: white;\n        text-align: center;\n        background-color: rgb(248, 74, 74);\n      }\n      .remaing {\n        font-size: 14px;\n        color: rgb(133, 133, 133);\n      }\n    }\n    .complete {\n      opacity: 0.5;\n    }\n    .main-list {\n      margin-top: 10px;\n      .swipe-cell {\n        margin-top: 10px;\n        .button {\n          height: 100%;\n        }\n        .van-checkbox {\n          margin-right: 10px;\n        }\n        .van-cell__value {\n          display: flex;\n          flex: unset;\n          flex-shrink: 0;\n          align-items: flex-end;\n        }\n        .time-need {\n          font-size: 12px;\n        }\n      }\n      .total-uncomplete {\n        display: flex;\n        margin-top: 10px;\n        font-size: 14px;\n        justify-content: space-between;\n        color: rgb(161, 161, 161);\n      }\n    }\n    .complete-tag-wrapper {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-top: 10px;\n      .complete-box-tag {\n        border-radius: 20px;\n        width: 25%;\n        font-size: 14px;\n        color: white;\n        text-align: center;\n        background-color: rgb(13, 163, 38);\n      }\n    }\n    .addNew {\n      position: fixed;\n      width: 80px;\n      height: 30px;\n      font-size: 12px;\n      right: 6%;\n      bottom: 15%;\n    }\n  }\n  .learn-plan-title {\n    font-size: 30px;\n  }\n  .button-class {\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    .van-button {\n      width: 40%;\n    }\n  }\n}\n</style>"]}]}