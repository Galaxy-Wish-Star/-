{"remainingRequest":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\src\\views\\article\\components\\comment-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\src\\views\\article\\components\\comment-list.vue","mtime":1645498622000},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674635617236},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1674635619784},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674635617236},{"path":"D:\\Web_DEV_ING\\Vue.js_technical_framework\\Vue2项目实战\\Heimatoutiao-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1674635619517}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgICBnZXRDb21tZW50TGlzdAp9IGZyb20gJ0AvYXBpL2NvbW1lbnQnOwppbXBvcnQge2dldFVzZXJJbmZvfSBmcm9tICdAL2FwaSc7CmltcG9ydCBjb21tZW50SXRlbSBmcm9tICcuL2NvbW1lbnQtaXRlbS52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBjb21tZW50SXRlbQogICAgfSwKICAgIG5hbWU6ICdjb21tZW50TGlzdCcsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNvbW1lbnRMaXN0OiBbXSwKICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgIGZpbmlzaGVkOiBmYWxzZSwKICAgICAgICAgICAgbGltaXQ6IDEwLAogICAgICAgICAgICBvZmZzZXQ6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgICBzb3VyY2U6IHsKICAgICAgICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nLCBPYmplY3RdLAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgbGlzdDp7CiAgICAgICAgICAgIHR5cGU6W0FycmF5XSwKICAgICAgICAgICAgZGVmYXVsdDooKT0+W10KICAgICAgICB9LAogICAgICAgIHR5cGU6ewogICAgICAgICAgICB0eXBlOltTdHJpbmddLAogICAgICAgICAgICBkZWZhdWx0OidhJwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgb25Mb2FkKCkgewogICAgICAgICAgICAvLyDlvILmraXmm7TmlrDmlbDmja4KICAgICAgICAgICAgY29uc3QgewogICAgICAgICAgICAgICAgZGF0YQogICAgICAgICAgICB9ID0gYXdhaXQgZ2V0Q29tbWVudExpc3QoewogICAgICAgICAgICAgICAgdHlwZTogdGhpcy50eXBlLAogICAgICAgICAgICAgICAgc291cmNlOiB0aGlzLnNvdXJjZS50b1N0cmluZygpLAogICAgICAgICAgICAgICAgb2Zmc2V0OiB0aGlzLm9mZnNldCwKICAgICAgICAgICAgICAgIGxpbWl0OiB0aGlzLmxpbWl0CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb25zdCB7CiAgICAgICAgICAgICAgICByZXN1bHRzLAogICAgICAgICAgICAgICAgbGFzdF9pZAogICAgICAgICAgICB9ID0gZGF0YS5kYXRhCiAgICAgICAgICAgIHRoaXMuY29tbWVudExpc3QucHVzaCguLi5yZXN1bHRzKSA7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1jb21tZW50TGVuZ3RoJyx0aGlzLmNvbW1lbnRMaXN0Lmxlbmd0aCkKICAgICAgICAgICAgdGhpcy5vZmZzZXQgPSBsYXN0X2lkOwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHJlc3VsdHMubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGFzeW5jIGFkZENvbW1lbnQoKXsKCiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOnsKICAgICAgICBsaXN0OnsKICAgICAgICAgICAgaXNEZWVwOnRydWUsCiAgICAgICAgICAgIGFzeW5jIGhhbmRsZXIoKXsKICAgICAgICAgICAgICAgIGNvbnN0e2lkT2JqLGNvbnRlbnR9PXRoaXMubGlzdFswXTsKICAgICAgICAgICAgICAgIGNvbnN0e2RhdGF9PWF3YWl0IGdldFVzZXJJbmZvKCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGlkT2JqKTsKICAgICAgICAgICAgICAgIGxldCBuZXdDb21tZW50PXsKICAgICAgICAgICAgICAgICAgICBjb21faWQ6aWRPYmouY29tX2lkLAogICAgICAgICAgICAgICAgICAgIGF1dF9pZDpkYXRhLmRhdGEuaWQsCiAgICAgICAgICAgICAgICAgICAgYXV0X25hbWU6ZGF0YS5kYXRhLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgYXV0X3Bob3RvOmRhdGEuZGF0YS5waG90bywKICAgICAgICAgICAgICAgICAgICBsaWtlX2NvdW50OjAsCiAgICAgICAgICAgICAgICAgICAgcmVwbHlfY291bnQ6MCwKICAgICAgICAgICAgICAgICAgICBwdWJkYXRlOkRhdGUubm93KCksCiAgICAgICAgICAgICAgICAgICAgY29udGVudDpjb250ZW50LAogICAgICAgICAgICAgICAgICAgIGlzX3RvcDowLAogICAgICAgICAgICAgICAgICAgIGlzX2xpa2luZzpmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5jb21tZW50TGlzdC51bnNoaWZ0KG5ld0NvbW1lbnQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["comment-list.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"comment-list.vue","sourceRoot":"src/views/article/components","sourcesContent":["<template>\n    <div class=\"commen-list\">\n        <van-list  v-model=\"loading\" :finished=\"finished\" :finished-text=\"commentList.length==0?'':'只有这么多评论啦~'\" @load=\"onLoad\">\n            <van-empty v-if=\"commentList.length==0\" description=\"暂时没有评论哦~ 快来发表第一条评论\" />\n            <comment-item @Reply=\"$emit('Reply',$event)\"  v-for=\"item,index in commentList\" :key=\"index\" :comment=\"item\">\n            </comment-item>\n        </van-list>\n    </div>\n</template>\n\n<script>\n    import {\n        getCommentList\n    } from '@/api/comment';\n    import {getUserInfo} from '@/api';\n    import commentItem from './comment-item.vue'\n    export default {\n        components: {\n            commentItem\n        },\n        name: 'commentList',\n        data() {\n            return {\n                commentList: [],\n                loading: false,\n                finished: false,\n                limit: 10,\n                offset: null\n            }\n        },\n        props: {\n            source: {\n                type: [Number, String, Object],\n                required: true\n            },\n            list:{\n                type:[Array],\n                default:()=>[]\n            },\n            type:{\n                type:[String],\n                default:'a'\n            }\n        },\n        methods: {\n            async onLoad() {\n                // 异步更新数据\n                const {\n                    data\n                } = await getCommentList({\n                    type: this.type,\n                    source: this.source.toString(),\n                    offset: this.offset,\n                    limit: this.limit\n                });\n                const {\n                    results,\n                    last_id\n                } = data.data\n                this.commentList.push(...results) ;\n                this.$emit('update-commentLength',this.commentList.length)\n                this.offset = last_id;\n                this.loading = false;\n                if (results.length == 0) {\n                    \n                    this.finished = true;\n                }\n            },\n            async addComment(){\n\n            }\n        },\n        watch:{\n            list:{\n                isDeep:true,\n                async handler(){\n                    const{idObj,content}=this.list[0];\n                    const{data}=await getUserInfo();\n                    console.log(data);\n                    console.log(idObj);\n                    let newComment={\n                        com_id:idObj.com_id,\n                        aut_id:data.data.id,\n                        aut_name:data.data.name,\n                        aut_photo:data.data.photo,\n                        like_count:0,\n                        reply_count:0,\n                        pubdate:Date.now(),\n                        content:content,\n                        is_top:0,\n                        is_liking:false\n                    }\n                    this.commentList.unshift(newComment);\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .title {\n        font-size: 20px;\n        padding: 10px;\n        color: #222222;\n    }\n</style>"]}]}